name: Deploy
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.github/workflows/test.yml'
  schedule:
    - cron: "0 2 * * 0" # Weekly on Sundays at 02:00

env:
  DOCKER_USERNAME: tiryoh
  DOCKER_IMAGENAME: ros2
  GIT_CONFIG_USER: Tiryoh@GitHubActions
  GIT_CONFIG_EMAIL: tiryoh@gmail.com

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros-distro:
          - dashing

    steps:
      - uses: actions/checkout@v2

      - name: Detect Ubuntu Distro
        id: ubuntu
        run: |
          if [[ "${{ matrix.ros-distro }}" == "dashing" ]] || [[ "${{ matrix.ros-distro }}" == "eloquent" ]] ; then
            DISTRO=bionic
          elif [[ "${{ matrix.ros-distro }}" == "foxy" ]]; then
            DISTRO=focal
          fi
          echo ::set-output name=distro::$DISTRO

      - name: Prepare Docker
        run: |	
          mkdir -p ~/.docker	
          grep -q '{' ~/.docker/config.json || echo '{}' | tee ~/.docker/config.json > /dev/null	
          jq '. |= .+ {"experimental": "enabled"}' ~/.docker/config.json > ~/docker-config.json && mv ~/docker-config.json ~/.docker/config.json
          sudo service docker restart

      - uses: docker/setup-qemu-action@v1

      - name: Prepare for Cross-Build
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
          cp /usr/bin/qemu-aarch64-static ubuntu/${{ steps.ubuntu.outputs.distro }}/arm64/${{ matrix.ros-distro }}/

      - name: Build amd64 Docker Image
        run: |
          cd ubuntu/${{ steps.ubuntu.outputs.distro }}/amd64/${{ matrix.ros-distro }}
          docker build -t $DOCKER_USERNAME/$DOCKER_IMAGENAME:amd64-${{ matrix.ros-distro }} .

      - name: Build arm64 Docker Image
        run: |
          cd ubuntu/${{ steps.ubuntu.outputs.distro }}/arm64/${{ matrix.ros-distro }}
          docker build -t $DOCKER_USERNAME/$DOCKER_IMAGENAME:arm64-${{ matrix.ros-distro }} .

      - name: Publish Docker Image
        env:
          ROS_DISTRO: ${{ matrix.ros-distro }}
          UBUNTU_DISTRO: ${{ steps.ubuntu.outputs.distro }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        id: docker
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "${DOCKER_USERNAME}" --password-stdin > /dev/null 2>&1
          docker push ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:amd64-${ROS_DISTRO}
          docker push ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-${ROS_DISTRO}
          TIMESTAMP=$(date '+%Y%m%dT%H%M')
          docker tag ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:amd64-${ROS_DISTRO} ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:amd64-${ROS_DISTRO}-${TIMESTAMP}
          docker tag ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-${ROS_DISTRO} ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-${ROS_DISTRO}-${TIMESTAMP}
          docker push ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:amd64-${ROS_DISTRO}-${TIMESTAMP}
          docker push ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-${ROS_DISTRO}-${TIMESTAMP}
          docker manifest create --amend ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:${ROS_DISTRO} ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-${ROS_DISTRO} ${DOCKER_USERNAME}/ros2:amd64-${ROS_DISTRO}
          docker manifest annotate ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:${ROS_DISTRO} ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-${ROS_DISTRO} --arch arm64 
          docker manifest push ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:${ROS_DISTRO}
          echo ::set-output name=timestamp::${TIMESTAMP}
          echo ::set-output name=digest-arm64::$(docker inspect --format='{{index .RepoDigests 0}}' ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-${ROS_DISTRO}-${TIMESTAMP})
          echo ::set-output name=digest-amd64::$(docker inspect --format='{{index .RepoDigests 0}}' ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:amd64-${ROS_DISTRO}-${TIMESTAMP})

      - name: Publish Docker Image as latest
        if: contains(matrix.ros-distro, 'dashing') == true
        env:
          ROS_DISTRO: ${{ matrix.ros-distro }}
        run: |
          docker tag ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:amd64-${ROS_DISTRO} ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:amd64-latest
          docker tag ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-${ROS_DISTRO} ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-latest
          docker push ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:amd64-latest
          docker push ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-latest
          docker manifest create --amend ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:latest ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-latest ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:amd64-latest
          docker manifest annotate ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:latest ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:arm64-latest --arch arm64 
          docker manifest push ${DOCKER_USERNAME}/${DOCKER_IMAGENAME}:latest

      - name: Get Current Job Log URL
        id: jobs
        uses: Tiryoh/gha-jobid-action@v0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: build-and-deploy (${{ matrix.ros-distro }})

      - name: Update GitHub wiki
        env:
          DOCKER_SNAPSHOT_AMD64: amd64-${{ matrix.ros-distro }}-${{ steps.docker.outputs.timestamp }}
          DOCKER_SNAPSHOT_ARM64: arm64-${{ matrix.ros-distro }}-${{ steps.docker.outputs.timestamp }}
          DOCKER_DIGEST_RAW_AMD64: ${{ steps.docker.outputs.digest-amd64 }}
          DOCKER_DIGEST_RAW_ARM64: ${{ steps.docker.outputs.digest-arm64 }}
        run: |
          DOCKER_DIGEST_AMD64=$(echo $DOCKER_DIGEST_RAW_AMD64 | sed -E 's/.*@sha256:(.*)/sha256-\1/g')
          DOCKER_DIGEST_AMD64_SHORT=$(echo $DOCKER_DIGEST_AMD64 | sed -E 's/.*([0-9a-z]{12})[0-9a-z]{52}$/\1/g')
          DOCKER_DIGEST_ARM64=$(echo $DOCKER_DIGEST_RAW_ARM64 | sed -E 's/.*@sha256:(.*)/sha256-\1/g')
          DOCKER_DIGEST_ARM64_SHORT=$(echo $DOCKER_DIGEST_ARM64 | sed -E 's/.*([0-9a-z]{12})[0-9a-z]{52}$/\1/g')
          DOCKER_SNAPSHOT_AMD64_IMAGE_HISTORY_URL=$(echo https://hub.docker.com/layers/${DOCKER_USERNAME}/${DOCKER_IMAGENAME}/${DOCKER_SNAPSHOT_AMD64}/images/${DOCKER_DIGEST_AMD64})
          DOCKER_SNAPSHOT_ARM64_IMAGE_HISTORY_URL=$(echo https://hub.docker.com/layers/${DOCKER_USERNAME}/${DOCKER_IMAGENAME}/${DOCKER_SNAPSHOT_ARM64}/images/${DOCKER_DIGEST_ARM64})
          git clone --depth=1 https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.wiki.git wiki
          cd wiki
          echo "AMD64"
          LINE=$(grep -n "add amd64-${{ matrix.ros-distro }} msg after this line" ${{ matrix.ros-distro }}.md | cut -d ":" -f 1)
          head -n $LINE ${{ matrix.ros-distro }}.md > tmp.md
          echo "* \`${DOCKER_DIGEST_AMD64_SHORT}\`" | tee -a tmp.md
          echo "    * uploaded on $(date --iso-8601="minutes")" | tee -a tmp.md
          echo "        * ${{ steps.jobs.outputs.html_url }}" | tee -a tmp.md
          echo "    * snapshot" | tee -a tmp.md
          echo "        * [\`${DOCKER_SNAPSHOT_AMD64}\`](${DOCKER_SNAPSHOT_AMD64_IMAGE_HISTORY_URL})" | tee -a tmp.md
          tail -n +$(( $LINE+1 )) ${{ matrix.ros-distro }}.md >> tmp.md
          mv tmp.md ${{ matrix.ros-distro }}.md
          echo "ARM64"
          LINE=$(grep -n "add arm64-${{ matrix.ros-distro }} msg after this line" ${{ matrix.ros-distro }}.md | cut -d ":" -f 1)
          head -n $LINE ${{ matrix.ros-distro }}.md > tmp.md
          echo "* \`${DOCKER_DIGEST_ARM64_SHORT}\`" | tee -a tmp.md
          echo "    * uploaded on $(date --iso-8601="minutes")" | tee -a tmp.md
          echo "        * ${{ steps.jobs.outputs.html_url }}" | tee -a tmp.md
          echo "    * snapshot" | tee -a tmp.md
          echo "        * [\`${DOCKER_SNAPSHOT_ARM64}\`](${DOCKER_SNAPSHOT_ARM64_IMAGE_HISTORY_URL})" | tee -a tmp.md
          tail -n +$(( $LINE+1 )) ${{ matrix.ros-distro }}.md >> tmp.md
          mv tmp.md ${{ matrix.ros-distro }}.md
          git config --local user.email "${GIT_CONFIG_EMAIL}"
          git config --local user.name "${GIT_CONFIG_USER}"
          git add ${{ matrix.ros-distro }}.md
          git commit -m "Update ${{ matrix.ros-distro }}.md"
          git push origin master
